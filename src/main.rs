use bn::arith::U256;
use bn::fields::{const_fq, FieldElement, Fq12, Fq6, Fq2, Fr, Fq};
use bn::groups::{pairing, AffineG, G1Params, G2Params, GroupElement, G1, G2};
use std::ops::Neg;

fn main() {
    // https://etherscan.io/tx/0x6ed11a0466c9d834d92ccbe0409c9a6f9b94486957b0c175d06fac7a9effd5cd
    // (proof=0x087094C69885257323A0A71E5546987A1375D506604BD43FB28AA601C57E5DE417BDEE0EC8D73F807E84D1253957E4D1BF10326C748C3148201752CA187FF93008788742E9FFE131C7424F8047550673AFE5E22030F8FA9328D00E155B5619D428928AC8652F2E506D741C480861935EE7F478693214352B749439BCE14BE8D9077F482D484DB119B3A6E8AAF413C29ED402EBA89B7CA0E61D3D6A853E5A138C1F5BF971300025E69FA45D1E836E9BBA363369AE84A57FC40EE08C3C8EFF89C82DF93F968831FA3227DFFFB51B6AB78B22FE5991F09D1615EA3AA8879B468FD12E4358C830817D5AE1BA04AD0FF547F8C64B524D69E247C261011B6257928515, input=[9036301164692616608208738778212780708560036219627275604985796383246611293316, 15989737978454283243885395664749941806839141622615261635548053863750736288007, 278648932549663935383220858750637418896101709762, 828731354164898730348918996934973655943593192137, 46500000000000000, 0])

    // {
    //   proof: '0x21a31a8bac9a46d5d7a565cd93b2bd7e6fc83c4d2593126c4f0b9621b6e244722515bd707f4988b720538d6d194cbc950933abc7d72d93361c0162b32026489a287dc3bcade474d44a70a6759241cb001b96a2ec14d23e968ae4a636625f966d11d985b2ebf8b5ee273d8e00a1f8654c9fcf6d8a4fa217ec47abfe409fb1d7361326909c8ad0ce780021d8523480035c0db0d59c63458fcf252c9c89349f2994300b9201046eeef6568d31c2de8efe03feb43d3de0d8d5618b05685e355976fd0f5ab697168911557324d2c9c3e38d61285bb2ad4b6dd72fb859973f912bcff82a6665ea021df718e0709ca799265a2c6c2a828a63b3cc23470f546516b7ffcc',
    //   publicSignals: [
    //     '0x22b06dd3dd036616b782c38eeace541a371700093faa11637e651b11f9100a01',
    //     '0x0c0e296531c26929fd94915ffceb402c867cc40389b20afc64ff584534c99e4f',
    //     '0x0000000000000000000000000000000000000000000000000000000000000000',
    //     '0x0000000000000000000000000000000000000000000000000000000000000000',
    //     '0x0000000000000000000000000000000000000000000000000000000000000000',
    //     '0x0000000000000000000000000000000000000000000000000000000000000000'
    //   ]
    // }
    let public_signals: [[u64; 4]; 6] = [
        [
            0x7e651b11f9100a01,
            0x371700093faa1163,
            0xb782c38eeace541a,
            0x22b06dd3dd036616,
        ],
        [
            0x64ff584534c99e4f,
            0x867cc40389b20afc,
            0xfd94915ffceb402c,
            0x0c0e296531c26929,
        ],
        [
            0x0000000000000000,
            0x0000000000000000,
            0x0000000000000000,
            0x0000000000000000,
        ],
        [
            0x0000000000000000,
            0x0000000000000000,
            0x0000000000000000,
            0x0000000000000000,
        ],
        [
            0x0000000000000000,
            0x0000000000000000,
            0x0000000000000000,
            0x0000000000000000,
        ],
        [
            0x0000000000000000,
            0x0000000000000000,
            0x0000000000000000,
            0x0000000000000000,
        ]
    ];

    // let public_signals: [[u64; 4]; 6] = [
    //     [
    //         0x592334ad239aa484,
    //         0x31b3bdb8fcdce681,
    //         0x83aecb5768c670f3,
    //         0x13fa5d7e986d4a32,
    //     ],
    //     [
    //         0x104a8bdd46d81907,
    //         0x44911ddf51ad8757,
    //         0x590a14d4147a5675,
    //         0x2359def8935c692c,
    //     ],
    //     [
    //         0xecd9d4b79a7b97c2,
    //         0x2fddb092bce9b8d4,
    //         0x0000000030cf0cdf,
    //         0x0000000000000000,
    //     ],
    //     [
    //         0x9475cd701ea9eac9,
    //         0xece435071129a6f1,
    //         0x0000000091299962,
    //         0x0000000000000000,
    //     ],
    //     [
    //         46500000000000000,
    //         0,
    //         0,
    //         0,
    //     ],
    //     [0, 0, 0, 0],
    // ];
    let vk = verifying_key();
    let mut vkx = G1::zero();
    vkx = vkx + vk.ic[0];
    for i in 0..6 {
        vkx = vkx + vk.ic[i + 1] * Fr::new(U256(public_signals[i])).unwrap();
    }

    let proof: [[u64; 4]; 8] = [
        [
            0x4f0b9621b6e24472,
            0x6fc83c4d2593126c,
            0xd7a565cd93b2bd7e,
            0x21a31a8bac9a46d5,
        ],
        [
            0x1c0162b32026489a,
            0x0933abc7d72d9336,
            0x20538d6d194cbc95,
            0x2515bd707f4988b7,
        ],
        [
            0x8ae4a636625f966d,
            0x1b96a2ec14d23e96,
            0x4a70a6759241cb00,
            0x287dc3bcade474d4,
        ],
        [
            0x47abfe409fb1d736,
            0x9fcf6d8a4fa217ec,
            0x273d8e00a1f8654c,
            0x11d985b2ebf8b5ee,
        ],
        [
            0x252c9c89349f2994,
            0x0db0d59c63458fcf,
            0x0021d8523480035c,
            0x1326909c8ad0ce78,
        ],
        [
            0x8b05685e355976fd,
            0xfeb43d3de0d8d561,
            0x568d31c2de8efe03,
            0x300b9201046eeef6,
        ],
        [
            0xb859973f912bcff8,
            0x285bb2ad4b6dd72f,
            0x7324d2c9c3e38d61,
            0x0f5ab69716891155,
        ],
        [
            0x470f546516b7ffcc,
            0x6c2a828a63b3cc23,
            0xe0709ca799265a2c,
            0x2a6665ea021df718,
        ],
    ];

    //let proof: [[u64; 4]; 8] = [
    //    [
    //        0xb28aa601c57e5de4,
    //        0x1375d506604bd43f,
    //        0x23a0a71e5546987a,
    //        0x087094c698852573,
    //    ],
    //    [
    //        0x201752ca187ff930,
    //        0xbf10326c748c3148,
    //        0x7e84d1253957e4d1,
    //        0x17bdee0ec8d73f80,
    //    ],
    //    [
    //        0x28d00e155b5619d4,
    //        0xafe5e22030f8fa93,
    //        0xc7424f8047550673,
    //        0x08788742e9ffe131,
    //    ],
    //    [
    //        0x749439bce14be8d9,
    //        0xe7f478693214352b,
    //        0x6d741c480861935e,
    //        0x28928ac8652f2e50,
    //    ],
    //    [
    //        0x1d3d6a853e5a138c,
    //        0xd402eba89b7ca0e6,
    //        0xb3a6e8aaf413c29e,
    //        0x077f482d484db119,
    //    ],
    //    [
    //        0x0ee08c3c8eff89c8,
    //        0x363369ae84a57fc4,
    //        0x9fa45d1e836e9bba,
    //        0x1f5bf971300025e6,
    //    ],
    //    [
    //        0xea3aa8879b468fd1,
    //        0x22fe5991f09d1615,
    //        0x27dfffb51b6ab78b,
    //        0x2df93f968831fa32,
    //    ],
    //    [
    //        0x61011b6257928515,
    //        0xc64b524d69e247c2,
    //        0xe1ba04ad0ff547f8,
    //        0x2e4358c830817d5a,
    //    ],
    //];

    let mut pairings: Vec<Fq12> = Vec::new();
    for i in 0..4 {
        let (p, q): (G1, G2) = match i {
            0 => (
                deserialize_g1_from_affine([proof[0], proof[1]])
                    .to_jacobian()
                    .neg(),
                deserialize_g2_from_affine([proof[2], proof[3], proof[4], proof[5]]).to_jacobian(),
            ),
            1 => (vk.alfa1, vk.beta2),
            2 => (vkx, vk.gamma2),
            3 => (
                deserialize_g1_from_affine([proof[6], proof[7]]).to_jacobian(),
                vk.delta2,
            ),
            _ => panic!("Unreachable."),
        };
        // println!("i = {:?}", i);
        // println!("p = {:?}", p.to_affine().unwrap());
        // println!("q = {:?}", q.to_affine().unwrap());
        let pairing = pairing(&p, &q);
        pairings.push(pairing);
    }
    println!(
        "mul = {:?}",
        pairings[0] * pairings[1] * pairings[2] * pairings[3],
    );
    println!("one = {:?}", Fq12::one());
    println!("zero = {:?}", Fq12::zero());
    if pairings[0] * pairings[1] * pairings[2] * pairings[3] != Fq12::one() {
        panic!("PAIRING NOT CORRECT");
    }
}

/* Utilities */
fn deserialize_g1_from_affine(points: [[u64; 4]; 2]) -> AffineG<G1Params> {
    AffineG::<G1Params> {
        x: Fq::new(U256(points[0])).unwrap(),
        y: Fq::new(U256(points[1])).unwrap(),
    }
}

fn deserialize_g2_from_affine(points: [[u64; 4]; 4]) -> AffineG<G2Params> {
    AffineG::<G2Params> {
        x: Fq2::new(Fq::new(U256(points[1])).unwrap(), Fq::new(U256(points[0])).unwrap()),
        y: Fq2::new(Fq::new(U256(points[3])).unwrap(), Fq::new(U256(points[2])).unwrap()),
    }
}

struct VerifyingKey {
    pub alfa1: G1,
    pub beta2: G2,
    pub gamma2: G2,
    pub delta2: G2,
    pub ic: [G1; 7],
}

fn verifying_key() -> VerifyingKey {
    VerifyingKey {
        alfa1: deserialize_g1_from_affine([
            [
                2320423973851029649,
                8916178567782527473,
                11796251668749875282,
                3296568872293101285,
            ],
            [
                14889541792691161055,
                4827721236820259407,
                11639101353050404710,
                1865998572599382637,
            ],
        ])
        .to_jacobian(),
        beta2: deserialize_g2_from_affine([
            [
                2802343415646674798u64,
                6436255260775964289u64,
                7771138277089019314u64,
                1938558481788197500u64,
            ],
            [
                5714556100039207638u64,
                13840956571565422495u64,
                5987349592421371165u64,
                44785091940186339u64,
            ],
            [
                18270623098688934377u64,
                7374529823324200399u64,
                7162334397420450950u64,
                2569526064041000562u64,
            ],
            [
                8912529107179052606u64,
                3521353661490560267u64,
                1878274539807868375u64,
                1435647187772860467u64,
            ],
        ])
        .to_jacobian(),
        gamma2: deserialize_g2_from_affine([
            [
                10945020018377822914u64,
                17413811393473931026u64,
                8241798111626485029u64,
                1841571559660931130u64,
            ],
            [
                5106727233969649389u64,
                7440829307424791261u64,
                4785637993704342649u64,
                1729627375292849782u64,
            ],
            [
                6173549831154472795u64,
                13567992399387660019u64,
                17050234209342075797u64,
                650358724130500725u64,
            ],
            [
                5541340697920699818u64,
                16416156555105522555u64,
                5380518976772849807u64,
                1353435754470862315u64,
            ],
        ])
        .to_jacobian(),
        delta2: deserialize_g2_from_affine([
            [
                5213764371784450568u64,
                6501183050373073302u64,
                14566812404951809013u64,
                3390194367816482299u64,
            ],
            [
                10533399507885132422u64,
                8502066251625666885u64,
                1517065339218800882u64,
                24036433181161453u64,
            ],
            [
                9061981669440563599u64,
                9970460087211956522u64,
                6425071750582774905u64,
                172346419185440659u64,
            ],
            [
                15896780023867373562u64,
                16431530531166173360u64,
                3706243266024269393u64,
                1821555101122443735u64,
            ],
        ])
        .to_jacobian(),
        ic: [
            deserialize_g1_from_affine([
                [
                    16612350195003011646,
                    16694472726483573245,
                    11181241841677491472,
                    2584815261611629596,
                ],
                [
                    8542989561729874066,
                    6086688765331839688,
                    3305414017189897822,
                    823193395181110779,
                ],
            ])
            .to_jacobian(),
            deserialize_g1_from_affine([
                [
                    12204370672090286004,
                    7025176770105815553,
                    16861487272848831192,
                    2052281193635792586,
                ],
                [
                    5860392755383281266,
                    3457281379082106305,
                    14936960457651748240,
                    3104651904365648200,
                ],
            ])
            .to_jacobian(),
            deserialize_g1_from_affine([
                [
                    2412237337469479481,
                    7101257042553009156,
                    6505378200991192527,
                    2084320632868867203,
                ],
                [
                    17359025414632902913,
                    17467136144854214864,
                    2629340672204543825,
                    95912302711637706,
                ],
            ])
            .to_jacobian(),
            deserialize_g1_from_affine([
                [
                    5890356199836945626,
                    90976302902759043,
                    8283983010322231996,
                    1550471281565233100,
                ],
                [
                    3323012601845369022,
                    15483114678579076473,
                    12294806027057697037,
                    442326222459392621,
                ],
            ])
            .to_jacobian(),
            deserialize_g1_from_affine([
                [
                    6024717448228493914,
                    3324201148237316350,
                    8908918589169136773,
                    1367886747179770165,
                ],
                [
                    13405775906222472799,
                    11351761182979731792,
                    8921574734511693836,
                    3389483845695942495,
                ],
            ])
            .to_jacobian(),
            deserialize_g1_from_affine([
                [
                    11934087455856126012,
                    14386424791387963807,
                    3468552646876333559,
                    782308259477189136,
                ],
                [
                    15466433915116038126,
                    6356970036249743257,
                    11543294905883257111,
                    3271011010427608988,
                ],
            ])
            .to_jacobian(),
            deserialize_g1_from_affine([
                [
                    3780248646755399265,
                    5034584203229263010,
                    3189555373153285973,
                    2443143149303319549,
                ],
                [
                    15736264559489144332,
                    10723219374054513722,
                    16968158167652998003,
                    846186232369622035,
                ],
            ])
            .to_jacobian(),
        ],
    }
}
